generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model users {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  sessions       sessions[]
}

model sessions {
  id       Int    @id @default(autoincrement()) 
  token    String @unique
  user     users  @relation(fields: [userId], references: [id])
  userId   Int   
}

model terms {
  id       Int    @id @default(autoincrement())
  number   Int    @unique
  disciplines disciplines[]
}

model disciplines {
  id                  Int    @id @default(autoincrement())
  name                String  @unique
  terms               terms  @relation(fields: [termId], references: [id])
  termId              Int 
  teachersDisciplines teachersDisciplines[]
}

model teachers {
  id                  Int    @id @default(autoincrement())
  name                String  @unique
  teachersDisciplines teachersDisciplines[]
}

model teachersDisciplines {
  id             Int    @id @default(autoincrement())
  teachers       teachers  @relation(fields: [teacherId], references: [id])
  teacherId      Int 
  disciplines    disciplines  @relation(fields: [disciplineId], references: [id])
  disciplineId   Int 
  tests          tests[]
}

model categories {
  id       Int    @id @default(autoincrement())
  name    String  @unique
  tests    tests[]

}

model tests {
  id                     Int    @id @default(autoincrement())
  name                   String 
  pdfUrl                 String
  categories             categories   @relation(fields: [categoryId], references: [id])
  categoryId             Int 
  teachersDisciplines    teachersDisciplines  @relation(fields: [teachersDisciplineId], references: [id])
  teachersDisciplineId       Int 
}